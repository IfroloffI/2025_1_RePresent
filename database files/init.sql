SET TIME ZONE '+03:00';

CREATE TABLE auth_user (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username TEXT NOT NULL UNIQUE,
    email TEXT NOT NULL UNIQUE CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'),
    password BYTEA NOT NULL,
    description TEXT,
    balance INT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    role INT NOT NULL
);

CREATE TABLE banner (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    owner_id INT NOT NULL,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    balance INT,
    content TEXT NOT NULL,
    link TEXT NOT NULL,
    deleted BOOLEAN NOT NULL DEFAULT FALSE,
    status INT,
    FOREIGN KEY (owner_id) REFERENCES auth_user(id)
);

CREATE TABLE payment (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    owner_id INT NOT NULL,
    amount INT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    status INT NOT NULL,
    balance DOUBLE PRECISION NOT NULL
);

CREATE TABLE transaction (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    transaction_id TEXT NOT NULL,
    user_id INT NOT NULL,
    amount DOUBLE PRECISION NOT NULL,
    type TEXT NOT NULL,
    status TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE OR REPLACE FUNCTION update_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_updated_at_trigger
BEFORE UPDATE ON auth_user
FOR EACH ROW
EXECUTE FUNCTION update_updated_at();